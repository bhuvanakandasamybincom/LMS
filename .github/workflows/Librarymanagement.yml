name: Build and deploy .NET Minimal API to Azure Web App & API Management

on:
  push:
    branches:
      - main

env:
  AZURE_WEBAPP_NAME: Librarymanagement
  AZURE_WEBAPP_PACKAGE_PATH: ./publish
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: BincomSession
  AZURE_APIM_SERVICENAME: LibraryManagementsysapi
  AZURE_APIM_API_ID: LibraryManagement
  AZURE_APIM_APPSERVICEURL: https://librarymanagement-cqcreeafbra9bpe0.centralus-01.azurewebsites.net
  API_IMPORT_SPECIFICATION_PATH: ./publish/swagger.json
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 9.0.x
  WORKING_DIRECTORY: ./LibraryManagement  # adjust this if your .csproj is elsewhere

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

    - name: Restore dependencies
      run: dotnet restore ${{ env.WORKING_DIRECTORY }}

    - name: Build
      run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

    - name: Test
      run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

    - name: Publish
      run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Upload publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: windows-latest
    needs: build

    steps:
    - name: Download published artifact
      uses: actions/download-artifact@v4
      with:
        name: webapp
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.LibraryManagementsysapi_SPN }}

    - name: Deploy to Azure Web App
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Wait for app to warm up
      run: |
        echo "Waiting 30 seconds for app to start..."
        Start-Sleep -Seconds 30
      shell: pwsh

    - name: Download Swagger JSON from deployed app
      run: Invoke-WebRequest -Uri "${{ env.AZURE_APIM_APPSERVICEURL }}/swagger/v1/swagger.json" -OutFile "${{ env.API_IMPORT_SPECIFICATION_PATH }}"
      shell: pwsh

    - name: Import API into Azure API Management
      run: az apim api import --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" --service-name "${{ env.AZURE_APIM_SERVICENAME }}" --api-id "${{ env.AZURE_APIM_API_ID }}" --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" --specification-format OpenApi --subscription-required false

    - name: Logout from Azure
      run: az logout
